{"version":3,"sources":["serviceWorkerRegistration.js","config/config.ts","api/api-item.ts","components/global/Loading.tsx","components/global/EmptyState.tsx","pages/Home.tsx","components/layout/Header.tsx","routing/routes.ts","pages/AddItem.tsx","routing/MainRouter.tsx","theme.ts","App.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","process","prefix","REACT_APP_GOOGLE_ANALYTICS","list","a","fetch","method","headers","Accept","response","json","create","body","JSON","stringify","vote","id","unvote","withStyles","createStyles","progressWrapper","minHeight","display","justifyContent","alignItems","classes","className","CircularProgress","spacing","wrapper","padding","textAlign","maxWidth","margin","icon","fontSize","header","flexDirection","iconContainer","message","undefined","action","actionLabel","Card","elevation","Error","color","CardHeader","title","Button","variant","endIcon","Replay","onClick","component","Link","to","Home","useState","items","setItems","loading","setLoading","setError","votedId","setVotedId","voting","setVoting","React","setMessage","load","useCallback","res","data","err","useEffect","voteItem","localStorage","removeItem","_id","setItem","item","Fragment","Grid","container","length","map","i","style","width","Zoom","in","transitionDelay","CardMedia","border","overflow","height","src","username","link","CardContent","Typography","gutterBottom","author","CardActions","disableSpacing","getItem","IconButton","disabled","aria-label","Favorite","FavoriteBorder","sm","xs","Snackbar","open","autoHideDuration","onClose","Header","AppBar","position","Toolbar","alt","Add","routes","name","history","setAuthor","authorError","setAuthorError","setLink","linkError","setLinkError","submit","passed","includes","handleValidation","portfolioLink","arr","split","push","startIcon","ArrowBack","TextField","label","autoFocus","value","onChange","e","target","onKeyDown","key","helperText","multiline","size","Check","authed","MainRouter","useHistory","justify","marginTop","marginBottom","fallback","exact","path","render","theme","createMuiTheme","palette","primary","main","secondary","background","default","paper","type","typography","fontFamily","join","h1","fontWeight","h2","h3","h4","h5","overrides","MuiTextField","root","MuiListItemText","MuiCard","MuiCardActions","responsiveFontSizes","App","ReactDOM","document","getElementById","URL","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.8dae6fd3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\n * Config types\n */\ntype IConfig = {\n  [key: string]: any;\n  env: string;\n  server_url: string;\n};\n\n/**\n * Load in environment variables from the .env and export them\n */\nexport const config: IConfig = {\n  env: process.env.NODE_ENV || \"development\",\n  server_url: process.env.REACT_APP_SERVER_URL || \"http://localhost:3000\",\n  ga_id: process.env.REACT_APP_GOOGLE_ANALYTICS,\n};\n","import { config } from \"../config/config\";\nimport { IItem } from \"../types\";\n\nconst prefix = config.server_url + \"/api/item\";\n\n/**\n * Fetch a list of Items\n *\n */\nexport const list = async () => {\n  try {\n    const response = await fetch(prefix, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\n\n/**\n * Fetch an Item by ID\n *\n * @param {id: String}\n */\nexport const show = async (id: string) => {\n  try {\n    const response = await fetch(`${prefix}/${id}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\n\n/**\n * Create an Item\n *\n * @param {body: {author: String, link: String}} body\n */\nexport const create = async (body: IItem) => {\n  try {\n    const response = await fetch(`${prefix}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        // Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(body),\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\n\n/**\n * Update an Item\n *\n * @param {id: String}\n * @param {body: {title: String, body: String, category_id: Int}} body\n */\nexport const update = async (id: string, body: IItem) => {\n  try {\n    const response = await fetch(`${prefix}/${id}`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        // Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(body),\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\n\n/**\n * Update an Item\n *\n * @param {id: String}\n */\nexport const vote = async (id: string, unvote: boolean) => {\n  try {\n    const response = await fetch(`${prefix}/vote/${id}/${unvote}`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        // Authorization: `Bearer ${token}`,\n      },\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\n\n/**\n * Removes a Item by ID\n *\n * @param {id: String}\n * @param {token: String}\n */\nexport const remove = async (id: string) => {\n  try {\n    const response = await fetch(`${prefix}/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        // Authorization: `Bearer ${token}`,\n      },\n    });\n    return response.status;\n  } catch (err) {\n    return console.log(err);\n  }\n};\n","/**\n * Component Library imports\n */\nimport { CircularProgress, withStyles, createStyles } from \"@material-ui/core\";\n\n/**\n * Injected styles\n *\n */\nconst styles = () =>\n  createStyles({\n    progressWrapper: {\n      minHeight: \"-webkit-fill-available\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  });\n\ntype IProps = {\n  classes: {\n    progressWrapper: string;\n  };\n};\n\n/**\n * Renders an Activity Indicator\n *  for the application\n */\nconst Loading = ({ classes }: IProps) => (\n  <div className={classes.progressWrapper}>\n    <CircularProgress />\n  </div>\n);\n\nexport default withStyles(styles)(Loading);\n","/**\n * Primary dependencies\n */\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  withStyles,\n  createStyles,\n  Card,\n  CardHeader,\n  Theme,\n} from \"@material-ui/core\";\nimport { Replay, Error } from \"@material-ui/icons\";\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n */\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    wrapper: {\n      padding: spacing(4),\n      textAlign: \"center\",\n      maxWidth: \"800px\",\n      margin: \"0 auto\",\n    },\n    icon: {\n      fontSize: \"3em\",\n    },\n    header: {\n      display: \"flex\",\n      flexDirection: \"column-reverse\",\n      justifyContent: \"center\",\n    },\n    iconContainer: {\n      textAlign: \"center\",\n    },\n  });\n\n/**\n * Componenet Types\n */\ntype IProps = {\n  message?: string;\n  action?: () => void;\n  actionLabel?: string;\n  classes: {\n    wrapper: string;\n    icon: string;\n    header: string;\n    iconContainer: string;\n  };\n};\n\n/**\n * Renders an Error\n *  for the application\n */\nconst EmptyState = ({\n  message = undefined,\n  classes,\n  action = undefined,\n  actionLabel = \"Try Again\",\n}: IProps) => (\n  <Card elevation={3} className={classes.wrapper}>\n    <div className={classes.iconContainer}>\n      <Error color=\"error\" className={classes.icon} />\n    </div>\n    <CardHeader\n      title={message ? message : \"There was a problem\"}\n      className={classes.header}\n    />\n    {action ? (\n      <Button\n        className={classes.iconContainer}\n        variant=\"contained\"\n        color=\"secondary\"\n        endIcon={<Replay />}\n        onClick={action}\n      >\n        {actionLabel}\n      </Button>\n    ) : (\n      <Button component={Link} to=\"/\" color=\"primary\" variant=\"contained\">\n        Home\n      </Button>\n    )}\n  </Card>\n);\n\nexport default withStyles(styles)(EmptyState);\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Grid,\n  IconButton,\n  Snackbar,\n  Typography,\n  Zoom,\n} from \"@material-ui/core\";\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { IItem } from \"../types\";\nimport { list, vote as voteItem } from \"../api/api-item\";\nimport Loading from \"../components/global/Loading\";\nimport EmptyState from \"../components/global/EmptyState\";\nimport { Favorite, FavoriteBorder, Replay } from \"@material-ui/icons\";\n\n/**\n * Home Component\n *\n */\nconst Home = () => {\n  const [items, setItems] = useState<IItem[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const [votedId, setVotedId] = useState(\"\");\n  const [voting, setVoting] = useState(false);\n  const [message, setMessage] = React.useState(\"\");\n\n  const load = useCallback(() => {\n    list()\n      .then((res) => {\n        setLoading(false);\n        if (res.error) {\n          setError(res.error);\n        } else {\n          setItems(res.data);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        setError(typeof err === \"string\" ? err : \"Could not load items\");\n      });\n  }, []);\n\n  useEffect(() => {\n    load();\n  }, [load]);\n\n  const vote = (id: string, unvote: boolean = false) => {\n    setVoting(true);\n    voteItem(id, unvote)\n      .then((res) => {\n        if (res.error) {\n          setMessage(\"Could not vote for item! \" + res.error);\n        }\n        setVoting(false);\n        if (res.data.unvote === \"true\") {\n          setVotedId(\"\");\n          localStorage.removeItem(\"voted\");\n          setMessage(\"Removed vote for item!\");\n        } else {\n          setVotedId(res.data._id);\n          localStorage.setItem(\"voted\", res.data.item._id);\n          setMessage(\"Voted for item!\");\n        }\n      })\n      .catch((err) => {\n        setVoting(false);\n        setMessage(\n          typeof err === \"string\" ? err : \"Error: Could not vote for item\"\n        );\n      });\n  };\n\n  /**\n   * Render JSX\n   */\n  if (loading) return <Loading />;\n  if (error !== \"\") return <EmptyState message={error} action={load} />;\n  return (\n    <React.Fragment>\n      <Grid container spacing={2}>\n        {items.length > 0 ? (\n          items.map((item, i) => (\n            <Grid\n              item\n              // sm={6}\n              // xs={12}\n              key={item._id ? item._id : item.link}\n              style={{ width: 400 }}\n            >\n              <Zoom in={true} style={{ transitionDelay: `${(i + 1) * 200}ms` }}>\n                <Card>\n                  <CardMedia\n                    component=\"iframe\"\n                    style={{ border: \"none\", overflow: \"unset\" }}\n                    width=\"400\"\n                    height=\"400\"\n                    src={`https://editor.p5js.org/${item.username}/embed/${item.link}`}\n                  />\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h3\" component=\"h3\">\n                      {item.author}\n                    </Typography>\n                  </CardContent>\n                  <CardActions disableSpacing>\n                    {(localStorage.getItem(\"voted\") &&\n                      localStorage.getItem(\"voted\") === item._id) ||\n                    votedId === item._id ? (\n                      <IconButton\n                        onClick={() =>\n                          vote(item._id ? item._id : item.link, true)\n                        }\n                        disabled={voting}\n                        aria-label=\"Unvote this item\"\n                      >\n                        <Favorite />\n                      </IconButton>\n                    ) : (\n                      <IconButton\n                        disabled={\n                          voting || localStorage.getItem(\"voted\") !== null\n                        }\n                        aria-label=\"Vote for this item\"\n                        onClick={() => vote(item._id ? item._id : item.link)}\n                      >\n                        <FavoriteBorder />\n                      </IconButton>\n                    )}\n                  </CardActions>\n                </Card>\n              </Zoom>\n            </Grid>\n          ))\n        ) : (\n          <Grid item sm={12} xs={12}>\n            <Card>\n              <CardContent>\n                <Typography gutterBottom variant=\"h3\" component=\"h3\">\n                  No Items Found\n                </Typography>\n              </CardContent>\n              <CardActions>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  endIcon={<Replay />}\n                  onClick={load}\n                >\n                  Try Again\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        )}\n      </Grid>\n\n      <Snackbar\n        open={message !== \"\"}\n        autoHideDuration={6000}\n        onClose={() => setMessage(\"\")}\n        message={message}\n      ></Snackbar>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","/**\n * Primary dependencies\n */\nimport React from \"react\";\n\n/**\n * Component Library imports\n */\nimport { AppBar, Button, Toolbar } from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * Header for the application\n */\nconst Header = () => {\n  return (\n    <React.Fragment>\n      <AppBar position=\"sticky\">\n        <Toolbar style={{ justifyContent: \"space-between\" }}>\n          <Link to=\"/\">\n            <img\n              src={process.env.PUBLIC_URL + \"/logo.png\"}\n              alt=\"Creative Computing Logo\"\n              width=\"100\"\n              style={{ padding: \"10px\" }}\n            />\n          </Link>\n          {!localStorage.getItem(\"existing\") && (\n            <Button component={Link} to=\"/add\" endIcon={<Add />}>\n              Add\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n\nexport default Header;\n","import AddItem from \"../pages/AddItem\";\n\n/**\n * Route Types\n */\nexport type IRouteType = {\n  name: string;\n  link: string;\n  component: any;\n  authed: boolean;\n};\n\n/**\n * Defines all routes for the application\n *\n * @param {string} name - The name of the route\n * @param {string} link - The link to he route\n * @param {JSX.Element} component - The component to be rendered\n * @param {bool} authed - Whether the user needs to be authenticated to view this route\n */\nconst routes: IRouteType[] = [\n  {\n    name: \"Add\",\n    link: \"/add\",\n    component: AddItem,\n    authed: false,\n  },\n];\n\nexport default routes;\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  createStyles,\n  TextField,\n  Theme,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { IHistoryProps } from \"../types\";\nimport { create } from \"../api/api-item\";\nimport { ArrowBack, Check, Error } from \"@material-ui/icons\";\nimport EmptyState from \"../components/global/EmptyState\";\n\n/**\n * Injected styles\n *\n * @param {int} spacing\n */\nconst styles = ({ spacing }: Theme) =>\n  createStyles({\n    wrapper: {\n      padding: spacing(4),\n    },\n    error: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  });\n\ntype IProps = {\n  classes: {\n    wrapper: string;\n    error: string;\n  };\n  history: IHistoryProps;\n};\n\n/**\n * CreateItem Component\n *\n * @param {History} history - the browser history object\n * @param {Theme} classes - classes passed from Material UI Theme\n */\nconst AddItem = ({ history, classes }: IProps) => {\n  const [author, setAuthor] = useState(\"\");\n  const [authorError, setAuthorError] = useState(\"\");\n\n  const [link, setLink] = useState(\"\");\n  const [linkError, setLinkError] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  /**\n   * Handle validation for form inputs\n   */\n  const handleValidation = () => {\n    let passed = true;\n\n    if (author.length < 3) {\n      setAuthorError(\"Author must be at least 4 characters\");\n      passed = false;\n    } else setAuthorError(\"\");\n\n    if (link.length < 5) {\n      setLinkError(\"Link must be at least 5 characters\");\n      passed = false;\n    } else setLinkError(\"\");\n\n    if (!link.includes(\"http\")) {\n      setLinkError(\"Link must be a valid link\");\n      passed = false;\n    } else setLinkError(\"\");\n\n    return passed;\n  };\n\n  /**\n   * Check validation and then run the\n   * item create network request\n   *\n   * On success, redirect to the home page\n   */\n  const submit = () => {\n    if (handleValidation()) {\n      setLoading(true);\n\n      let username, portfolioLink;\n\n      if (link.includes(\"iframe\")) {\n        const url = link.split(`src=\"`)[1].split(`\">`)[0];\n        const arr = url.split(\".org/\")[1].split(\"/embed/\");\n\n        username = arr[0];\n        portfolioLink = arr[1];\n      } else {\n        const arr = link.split(\".org/\")[1].split(\"/\");\n        username = arr[0];\n        portfolioLink = arr[2];\n      }\n\n      create({ author, username, link: portfolioLink }).then((data) => {\n        if (!data || data.error) {\n          setLoading(false);\n          return setError(\n            data && data.error ? data.error : \"Could not create portfolio item\"\n          );\n        }\n        localStorage.setItem(\"existing\", \"true\");\n        history.push(`/`);\n      });\n    }\n  };\n\n  /**\n   * Render JSX\n   */\n  if (localStorage.getItem(\"existing\"))\n    return <EmptyState message={\"You have already added a portfolio item\"} />;\n  return (\n    <React.Fragment>\n      <Button component={Link} to=\"/\" startIcon={<ArrowBack />}>\n        Back\n      </Button>\n      <Card elevation={3} className={classes.wrapper}>\n        <CardHeader author=\"Create Portfolio Item\" />\n\n        <CardContent>\n          <TextField\n            name=\"author\"\n            label=\"Author\"\n            autoFocus={true}\n            margin=\"normal\"\n            value={author}\n            onChange={(e) => setAuthor(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && submit()}\n            error={authorError !== \"\"}\n            helperText={authorError}\n          />\n\n          <TextField\n            name=\"link\"\n            label=\"Link\"\n            margin=\"normal\"\n            value={link}\n            onChange={(e) => setLink(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && submit()}\n            error={linkError !== \"\"}\n            helperText={linkError}\n            multiline\n          />\n        </CardContent>\n        <br />\n        {error !== \"\" && (\n          <Typography\n            component=\"p\"\n            className={classes.error}\n            color=\"error\"\n            style={{ textAlign: \"center\" }}\n          >\n            <Error color=\"error\" />\n            {error}\n          </Typography>\n        )}\n        <CardActions>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={submit}\n            disabled={loading}\n            endIcon={loading ? <CircularProgress size={18} /> : <Check />}\n          >\n            Create\n          </Button>\n        </CardActions>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(AddItem);\n","import React, { Suspense } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport { Grid } from \"@material-ui/core\";\n\nimport Home from \"./../pages/Home\";\nimport Header from \"./../components/layout/Header\";\nimport EmptyState from \"./../components/global/EmptyState\";\n\nimport routes, { IRouteType } from \"./routes\";\n// import auth from \"./../helpers/auth-helper\";\nimport Loading from \"../components/global/Loading\";\n\n/**\n * Handles Routing for the application\n *\n * @returns {JSX.Element}\n */\nconst MainRouter = () => {\n  /**\n   * If set to true, displays routes that only authenticated users should see\n   * If not, displays login / register\n   */\n  const isAuthed = false;\n  const history = useHistory();\n  /**\n   * Check if the user is authenticaed\n   */\n  // useEffect(() => {\n  //   const setAuth = (bool: boolean) => setIsAuthed(bool);\n\n  //   const jwt = auth.isAuthenticated();\n  //   setAuth(jwt ? true : false);\n\n  //   /**\n  //    * Listen for changes in the URL bar,\n  //    * and check if the user is authenticated\n  //    *\n  //    * Can only be done when the component\n  //    * is exported through withRouter\n  //    */\n  //   history.listen(() => {\n  //     const jwt = auth.isAuthenticated();\n  //     setAuth(jwt ? true : false);\n  //   });\n  // }, [history]);\n\n  return (\n    <React.Fragment>\n      <Header />\n      <Grid\n        container\n        justify=\"center\"\n        style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\n      >\n        <Grid item xs={11}>\n          <Suspense fallback={<Loading />}>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n\n              {routes.map(({ link, component, authed }: IRouteType, i) => {\n                if (authed && !isAuthed)\n                  return (\n                    <Route\n                      key={i}\n                      render={() => (\n                        <EmptyState\n                          message=\"You need to be logged in to view this page\"\n                          action={() => history.push(\"/login\")}\n                          actionLabel={\"Login\"}\n                        />\n                      )}\n                    />\n                  );\n\n                return <Route path={link} component={component} key={i} />;\n              })}\n\n              <Route\n                render={() => (\n                  <EmptyState message=\"The page you are looking for does not exist\" />\n                )}\n              />\n            </Switch>\n          </Suspense>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default MainRouter;\n","/**\n * File: theme.js\n * Project: ca2-client\n * Version 0.1.0\n * File Created: Tuesday, 5th January 2021 1:46:00 pm\n * Author: Eoan O'Dea (eoan@web-space.design)\n * -----\n * File Description:\n * Last Modified: Sunday, 7th February 2021 1:49:32 pm\n * Modified By: Eoan O'Dea (eoan@web-space.design>)\n * -----\n * Copyright 2021 WebSpace, WebSpace\n */\n\nimport { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#ff5006\",\n    },\n    secondary: {\n      main: \"#410099\",\n    },\n    background: {\n      default: \"#0B1315\",\n      paper: \"#171F21\",\n    },\n    type: \"dark\",\n  },\n  typography: {\n    fontFamily: [\"quicksand\", \"sans-serif\"].join(\",\"),\n\n    h1: {\n      fontWeight: 800,\n      fontSize: \"3.052rem\",\n      margin: \"3rem 0 1.38rem\",\n      // color: \"#4e4e4e\",\n    },\n    h2: {\n      fontWeight: 700,\n      fontSize: \"2.441rem\",\n      margin: \"3rem 0 1.38rem\",\n      // color: \"#4e4e4e\",\n    },\n    h3: {\n      fontWeight: 700,\n      fontSize: \"1.953rem\",\n      margin: \"3rem 0 1.38rem\",\n      // color: \"#4e4e4e\",\n    },\n    h4: {\n      fontWeight: 700,\n      fontSize: \"1.563rem\",\n      margin: \"3rem 0 1.38rem\",\n      // color: \"#4e4e4e\",\n    },\n    h5: {\n      fontWeight: 700,\n      fontSize: \"1.25rem\",\n      // color: \"#4e4e4e\",\n    },\n  },\n  overrides: {\n    MuiTextField: {\n      root: {\n        width: \"100%\",\n        margin: \"16px auto\",\n      },\n    },\n    MuiListItemText: {\n      root: {\n        display: \"flex\",\n        flexDirection: \"column-reverse\",\n      },\n    },\n    MuiCard: {\n      root: {\n        textAlign: \"center\",\n      },\n    },\n    MuiCardActions: {\n      root: {\n        justifyContent: \"center\",\n      },\n    },\n  },\n});\n\ntheme = responsiveFontSizes(theme);\n\nexport default theme;\n","import { BrowserRouter as Router } from \"react-router-dom\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\n\nimport MainRouter from \"./routing/MainRouter\";\nimport theme from \"./theme\";\n\n/**\n * Entry point for the application\n *\n * @returns {JSX.Element}\n */\nconst App = () => {\n  return (\n    <Router>\n      <MuiThemeProvider theme={theme}>\n        <MainRouter />\n      </MuiThemeProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nimport App from \"./App\";\n\n/**\n * Render the application to the DOM\n */\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}